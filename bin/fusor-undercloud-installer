#!/bin/bash

fusor_undercloud_install() {

  interactive=true
  # Check if we are in non-interactive mode
  if [ "$#" -eq 1 ]; then
    case $1 in
      --non-interactive)
      CONF_FILE='/etc/fusor-undercloud-installer/fusor-undercloud-installer.answers.yaml'
      interactive=false
      ;;
      --answer-file=*)
      CONF_FILE="${1#*=}"
      interactive=false
      ;;
      *)
      echo 'Invalid argument... staying in interactive mode'
    esac
  fi

  # Check if configuration file exists
  if [ $interactive == false ]; then
    if [ -f $CONF_FILE ]; then
      echo "Running in non-interactive mode using answer file: $CONF_FILE "
    else
      echo "Answer file not found... Exiting."
      exit
    fi
  fi
  export CONF_FILE

  # create stack user, become her
  id -u stack >/dev/null 2>&1
  if [ $? -ne 0 ]; then
    useradd stack
  fi
  echo "stack ALL=(root) NOPASSWD:ALL" >> /etc/sudoers.d/stack
  chmod 0440 /etc/sudoers.d/stack

  sudo -u stack mkdir -p /home/stack/templates

  # Create a stupid bogus yum repo so that yum won't exit with an error status
  # during the undercloud install
  mkdir -p /tmp/repodata

  echo '<metadata packages="2"><package type="rpm"><name>mysql-libs</name><arch>x86_64</arch><version epoch="0" ver="5.4" rel="1"/><checksum type="sha" pkgid="YES">94099f245daf064eebd591023af87c891eaaa291</checksum><summary>Fake package to make yum dependency resolution work</summary></package><package type="rpm"><name>mysql-devel</name><arch>x86_64</arch><version epoch="0" ver="5.4" rel="1"/><checksum type="sha" pkgid="YES">94099f245daf064eebd591023af87c891eaaa291</checksum><summary>Fake package to make yum dependency resolution work</summary></package></metadata>' > /tmp/repodata/primary.xml

  echo '<filelists packages="2"><package name="mysql-libs" arch="x86_64"><version epoch="0" ver="5.4" rel="1"/></package><package name="mysql-devel" arch="x86_64"><version epoch="0" ver="5.4" rel="1"/></package></filelists>' > /tmp/repodata/filelists.xml

  echo '<repomd><revision>1</revision><data type="primary"><checksum type="sha">7a221b9483a86c65378d744ca9f075b7afd25a03</checksum><location href="repodata/primary.xml"/></data><data type="filelists"><checksum type="sha">66fc42e40a9504c889b9b217f71e0a02abb1f454</checksum><location href="repodata/filelists.xml"/></data></repomd>' > /tmp/repodata/repomd.xml

  echo "[fake-repo-to-make-yum-happy]
name=fake-repo-to-make-yum-happy
baseurl=file:///tmp
enabled=1" > /etc/yum.repos.d/fake.repo

  # Exit if this stuff doesn't go right
  set -e

  # enable IP forwarding
  if grep -q "net.ipv4.ip_forward" /etc/sysctl.conf
  then
      sed -i 's/net.ipv4.ip_forward[ ]*=[ ]*0/net.ipv4.ip_forward = 1/' /etc/sysctl.conf
  else
      echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf
  fi
  sysctl -p /etc/sysctl.conf

  ValidHostnameRegex='^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$'
  ValidIpAddressRegex='^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$'
  ValidInput=false

  while [ $ValidInput == false ]; do
    if [ $interactive == true ]; then
      read -e -p "Set your resolvable Fully Qualified Domain Name: " -i $HOSTNAME HOSTNAME
    else
      # Grab the desired hostname from answer file
      HOSTNAME=`grep ^hostname $CONF_FILE | awk '{print $2}'`
    fi

    if [[ $HOSTNAME =~ $ValidHostnameRegex ]]
    then
      echo "Hostname is in valid format, setting hostname"
      ValidInput=true
    else
      echo "Specified hostname is not valid"
      if [ $interactive == false ]; then
        exit
      fi
    fi
  done

  hostnamectl set-hostname $HOSTNAME
  hostnamectl set-hostname --transient $HOSTNAME
  # In case we're running this installer again, delete any previous entries
  sed -i '/fusor-undercloud-installer/,+1d' /etc/hosts
  echo "# fusor-undercloud-installer managed:" >> /etc/hosts
  echo "127.0.0.1 $HOSTNAME `hostname -s`" >> /etc/hosts

  ValidInput=false
  # Ask for DNS server and set it if not already in resolv.conf
  NAMESERVER=`grep ^nameserver /etc/resolv.conf | head -1 |awk '{print $2}'`
  if [ -z $NAMESERVER ]; then NAMESERVER='127.0.0.1'; fi

  while [ $ValidInput == false ]; do
    if [ $interactive == true ]; then
      read -e -p "Enter the DNS nameserver's IP address to use for the Overcloud: " -i $NAMESERVER NAMESERVER
    else
      NAMESERVER=`grep ^nameserver $CONF_FILE | awk '{print $2}'`
    fi
    if [[  $NAMESERVER =~ $ValidIpAddressRegex  ]]
    then
      echo "Nameserver IP address is valid"
      ValidInput=true
    else
      echo "Specified nameserver is not a valid IP address"
      if [ $interactive == false ]; then
        exit
      fi
    fi
  done

  grep -q $NAMESERVER /etc/resolv.conf || echo "nameserver $NAMESERVER" >> /etc/resolv.conf

  # Store public ip address for later
  # If there's an error, the next call to configurator will print it
  # let's not exit this script here because the error will not be printed
  set +e
  MYADDR=`fusor-undercloud-configurator get-addr`
  set -e

  # Prompt user for network setup and write the undercloud config file
  sudo -E -u stack python -u /usr/sbin/fusor-undercloud-configurator

  # call out to egon to run the undercloud installer
  cd /home/stack
  sudo -u stack scl enable tfm "undercloud-install-local.rb" # call egon to do the install

  # Delete the stupid bogus repo
  rm -rf /tmp/repodata
  rm -f /etc/yum.repos.d/fake.repo

  # Set DNS server
  source /home/stack/stackrc
  NETWORK_ID=`neutron subnet-list | grep start | awk '{print $2}'`
  neutron subnet-update $NETWORK_ID --dns-nameserver $NAMESERVER

  openstack-service restart swift

  #We do not use these and do not want them
  nova flavor-delete baremetal
  nova flavor-delete block-storage
  nova flavor-delete ceph-storage
  nova flavor-delete swift-storage
  nova flavor-delete compute
  nova flavor-delete control

  # Echo out ip addr and password
  echo "Installation complete!"
  echo
  echo "Your IP Address is:"
  python -c "import netifaces as ni; print ni.ifaddresses('br-ctlplane')[2][0]['addr']"
  echo "Make a note of this for the RHCI web UI."
}

fusor_undercloud_install "$@" 2>&1 | tee /var/log/fusor-undercloud-install.log
